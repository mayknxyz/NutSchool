# version: '3.8'

# services:
#   astro-static-site:
#     build:
#       context: . # Points to the current directory where your Dockerfile is
#       dockerfile: Dockerfile
#     ports:
#       - "4321:8080" # Map host port 8080 to container port 8080 (where Nginx listens)
#     # For a static site, you generally *don't* need to mount your source code
#     # as a volume for "live reloading" in the same way you would for a dev server.
#     # Changes to source code require a rebuild.
#     # volumes:
#     #   - .:/app # Not typically needed for serving a *built* static site

#     # No command needed as CMD is already in the Dockerfile for Nginx


# compose.yaml
version: '3.8'

services:
  astro-dev:
    build: .
    ports:
      - "4321:4321" # Map host port 4321 to container port 4321
    working_dir: /app
    environment:
      NODE_ENV: development
    develop:
      watch:
        # Action 1: Sync all source files
        - action: sync
          path: ./ # Watch the entire project directory on the host
          target: /app # Sync to the /app directory inside the container
          ignore:
            - node_modules/ # Important: Don't sync node_modules to prevent infinite loops/issues
            - dist/       # Don't sync build output if you have any
            - .git/       # Ignore Git metadata

        # Action 2: Rebuild if package.json or other critical build files change
        - action: rebuild
          path: package.json
          # You might also add other files that necessitate a full build/npm install
          # e.g., pnpm-lock.yaml, yarn.lock, tsconfig.json, astro.config.mjs if major changes